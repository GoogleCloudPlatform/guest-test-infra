---
resource_types:
- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource

resources:
# Windows 2019
- name: compute-image-tools
  type: git
  source:
    uri: https://github.com/GoogleCloudPlatform/compute-image-tools.git
    branch: master
- name: guest-test-infra
  type: git
  source:
    uri: https://github.com/GoogleCloudPlatform/guest-test-infra.git
    branch: master
- name: windows-20h2-core-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-20h2-dc-core-v([0-9]+).tar.gz"
- name: windows-20h2-core-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-20h2-dc-core-internal-v([0-9]+).tar.gz"
- name: windows-2004-core-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2004-dc-core-v([0-9]+).tar.gz"
- name: windows-2004-core-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2004-dc-core-internal-v([0-9]+).tar.gz"
- name: windows-2022-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2022-dc-v([0-9]+).tar.gz"
- name: windows-2022-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2022-dc-internal-v([0-9]+).tar.gz"
- name: windows-2022-core-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2022-dc-core-v([0-9]+).tar.gz"
- name: windows-2022-core-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2022-dc-core-internal-v([0-9]+).tar.gz"
- name: windows-2019-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2019-dc-v([0-9]+).tar.gz"
- name: windows-2019-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2019-dc-internal-v([0-9]+).tar.gz"
- name: windows-2019-core-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2019-dc-core-v([0-9]+).tar.gz"
- name: windows-2019-core-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2019-dc-core-internal-v([0-9]+).tar.gz"
- name: windows-2016-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2016-dc-v([0-9]+).tar.gz"
- name: windows-2016-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2016-dc-internal-v([0-9]+).tar.gz"
- name: windows-2016-core-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2016-dc-core-v([0-9]+).tar.gz"
- name: windows-2016-core-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2016-dc-core-internal-v([0-9]+).tar.gz"
- name: windows-2012r2-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2012-r2-dc-v([0-9]+).tar.gz"
- name: windows-2012r2-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2012-r2-dc-internal-v([0-9]+).tar.gz"
- name: windows-2012r2-core-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2012-r2-dc-core-v([0-9]+).tar.gz"
- name: windows-2012r2-core-internal-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "windows-uefi/windows-server-2012-r2-dc-core-internal-v([0-9]+).tar.gz"
- name: sql-2012-enterprise-windows-2012-r2-dc-gcs
  type: gcs
  source:
    bucket: artifact-releaser-prod-rtp
    json_key: |
      ((gcs-key.credential))
    regexp: "sqlserver-uefi/sql-2012-enterprise-windows-2012-r2-dc-v([0-9]+).tar.gz"

jobs:
# Build jobs
# Windows 2022
- name: build-windows-2022
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2022-dc"
  - put: windows-2022-gcs
    params:
      file: build-id-dir/windows-server-2022-dc-v*
    get_params:
      skip_download: "true"
  - put: windows-2022-internal-gcs
    params:
      file: build-id-dir/windows-server-2022-dc-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2022-gcs/url
  - load_var: gcs-internal-url
    file: windows-2022-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "win2022-64"
  - load_var: windows-iso
    file: gcp-secret-manager/win2022-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_server2022"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_server2022
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2022
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2022-dc-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
# Windows 2022 Core
- name: build-windows-2022-core
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2022-dc-core"
  - put: windows-2022-core-gcs
    params:
      file: build-id-dir/windows-server-2022-dc-core-v*
    get_params:
      skip_download: "true"
  - put: windows-2022-core-internal-gcs
    params:
      file: build-id-dir/windows-server-2022-dc-core-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2022-core-gcs/url
  - load_var: gcs-internal-url
    file: windows-2022-core-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "win2022-64"
  - load_var: windows-iso
    file: gcp-secret-manager/win2022-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_server2022"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_server2022
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2022-core
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2022-dc-core-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
# Windows SAC 20h2 Core
- name: build-windows-20h2-core
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-20h2-dc-core"
  - put: windows-20h2-core-gcs
    params:
      file: build-id-dir/windows-server-20h2-dc-core-v*
    get_params:
      skip_download: "true"
  - put: windows-20h2-core-internal-gcs
    params:
      file: build-id-dir/windows-server-20h2-dc-core-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-20h2-core-gcs/url
  - load_var: gcs-internal-url
    file: windows-20h2-core-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "winserver-20h2-64"
  - load_var: windows-iso
    file: gcp-secret-manager/winserver-20h2-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_sac20h2"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_sac20h2
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
    params:
      SECRET_VERSION: "1"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-20h2-core
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-20h2-dc-core-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-20h2-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-20h2-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows SAC 2004 Core
- name: build-windows-2004-core
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2004-dc-core"
  - put: windows-2004-core-gcs
    params:
      file: build-id-dir/windows-server-2004-dc-core-v*
    get_params:
      skip_download: "true"
  - put: windows-2004-core-internal-gcs
    params:
      file: build-id-dir/windows-server-2004-dc-core-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2004-core-gcs/url
  - load_var: gcs-internal-url
    file: windows-2004-core-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "winserver-2004-64"
  - load_var: windows-iso
    file: gcp-secret-manager/winserver-2004-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_sac2004"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_sac2004
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2004-core
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2004-dc-core-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2004-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2004-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2019
- name: build-windows-2019
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2019-dc"
  - put: windows-2019-gcs
    params:
      file: build-id-dir/windows-server-2019-dc-v*
    get_params:
      skip_download: "true"
  - put: windows-2019-internal-gcs
    params:
      file: build-id-dir/windows-server-2019-dc-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2019-gcs/url
  - load_var: gcs-internal-url
    file: windows-2019-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "win2019-64"
  - load_var: windows-iso
    file: gcp-secret-manager/win2019-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_server2019"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_server2019
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2019
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2019-dc-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2019"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2019"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2019 Core
- name: build-windows-2019-core
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2019-dc-core"
  - put: windows-2019-core-gcs
    params:
      file: build-id-dir/windows-server-2019-dc-core-v*
    get_params:
      skip_download: "true"
  - put: windows-2019-core-internal-gcs
    params:
      file: build-id-dir/windows-server-2019-dc-core-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2019-core-gcs/url
  - load_var: gcs-internal-url
    file: windows-2019-core-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "win2019-64"
  - load_var: windows-iso
    file: gcp-secret-manager/win2019-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_server2019"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_server2019
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2019-core
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2019-dc-core-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2019-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2019-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2016
- name: build-windows-2016
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2016-dc"
  - put: windows-2016-gcs
    params:
      file: build-id-dir/windows-server-2016-dc-v*
    get_params:
      skip_download: "true"
  - put: windows-2016-internal-gcs
    params:
      file: build-id-dir/windows-server-2016-dc-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2016-gcs/url
  - load_var: gcs-internal-url
    file: windows-2016-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "win2016-64"
  - load_var: windows-iso
    file: gcp-secret-manager/win2016-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_server2016"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_server2016
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2016
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2016-dc-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2016"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2016"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2016 Core
- name: build-windows-2016-core
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2016-dc-core"
  - put: windows-2016-core-gcs
    params:
      file: build-id-dir/windows-server-2016-dc-core-v*
    get_params:
      skip_download: "true"
  - put: windows-2016-core-internal-gcs
    params:
      file: build-id-dir/windows-server-2016-dc-core-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2016-core-gcs/url
  - load_var: gcs-internal-url
    file: windows-2016-core-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "win2016-64"
  - load_var: windows-iso
    file: gcp-secret-manager/win2016-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_server2016"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_server2016
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2016-core
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2016-dc-core-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2016-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2016-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2012r2
- name: build-windows-2012r2
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2012-r2-dc"
  - put: windows-2012r2-gcs
    params:
      file: build-id-dir/windows-server-2012-r2-dc-v*
    get_params:
      skip_download: "true"
  - put: windows-2012r2-internal-gcs
    params:
      file: build-id-dir/windows-server-2012-r2-dc-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2012r2-gcs/url
  - load_var: gcs-internal-url
    file: windows-2012r2-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "win2012-r2-64"
  - load_var: windows-iso
    file: gcp-secret-manager/win2012-r2-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_server2012r2"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_server2012r2
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2012r2
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2012r2-dc-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2012r2"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2012r2"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2012r2 Core
- name: build-windows-2012r2-core
  plan:
  - get: compute-image-tools
  - get: guest-test-infra
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "windows-server-2012-r2-dc-core"
  - put: windows-2012r2-core-gcs
    params:
      file: build-id-dir/windows-server-2012-r2-dc-core-v*
    get_params:
      skip_download: "true"
  - put: windows-2012r2-core-internal-gcs
    params:
      file: build-id-dir/windows-server-2012-r2-dc-core-internal-v*
    get_params:
      skip_download: "true"
  - load_var: gcs-url
    file: windows-2012r2-core-gcs/url
  - load_var: gcs-internal-url
    file: windows-2012r2-core-internal-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: get-secret-iso
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "win2012-r2-64"
  - load_var: windows-iso
    file: gcp-secret-manager/win2012-r2-64
  - task: get-secret-updates
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_updates_server2012r2"
  - load_var: windows-updates
    file: gcp-secret-manager/windows_gcs_updates_server2012r2
  - task: get-secret-pwsh
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_pwsh"
  - load_var: windows-gcs-pwsh
    file: gcp-secret-manager/windows_gcs_pwsh
  - task: get-secret-cloud-sdk
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_cloud_sdk"
  - load_var: windows-cloud-sdk
    file: gcp-secret-manager/windows_gcs_cloud_sdk
  - task: get-secret-dotnet48
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_dotnet48"
  - load_var: windows-gcs-dotnet48
    file: gcp-secret-manager/windows_gcs_dotnet48
  - task: daisy-build-windows-2012r2-core
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows.yaml
    vars:
      wf: "windows/windows-server-2012r2-dc-core-uefi.wf.json"
      gcs_url: ((.:gcs-url))
      gcs_internal_url: ((.:gcs-internal-url))
      iso: ((.:windows-iso))
      pwsh: ((.:windows-gcs-pwsh))
      dotnet48: ((.:windows-gcs-dotnet48))
      cloudsdk: ((.:windows-cloud-sdk))
      updates: ((.:windows-updates))
      google_cloud_repo: "stable"
      build_date: ((.:build-date))
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2012r2-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "build-windows-2012r2-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# sql-2012-enterprise-windows-2012-r2-dc
- name: build-sql-2012-enterprise-windows-2012-r2-dc
  plan:
  - get: compute-image-tools
    passed: [publish-to-testing-2012r2]
    trigger: true
  - get: guest-test-infra
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-build-id
    file: guest-test-infra/concourse/tasks/generate-build-ids-windows.yaml
    vars:
      prefix: "sql-2012-enterprise-windows-2012-r2-dc"
  - put: sql-2012-enterprise-windows-2012-r2-dc-gcs
    params:
      file: build-id-dir/sql-2012-enterprise-windows-2012-r2-dc-v*
  - load_var: gcs_url
    file: sql-2012-enterprise-windows-2012-r2-dc-gcs/url
  - task: generate-build-date
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: build-date
    file: publish-version/version
  - task: get-secret-sql-server-media
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "sql-2012-enterprise"
  - load_var: sql-server-media
    file: gcp-secret-manager/sql-2012-enterprise
  - task: get-secret-windows-gcs-ssms-exe
    file: guest-test-infra/concourse/tasks/gcloud-get-secret.yaml
    vars:
      secret_name: "windows_gcs_ssms_exe"
  - load_var: windows_gcs_ssms_exe
    file: gcp-secret-manager/windows_gcs_ssms_exe
  - task: daisy-build-sql-2012-enterprise-windows-2012-r2-dc
    file: guest-test-infra/concourse/tasks/daisy-build-images-windows-sql.yaml
    vars:
      wf: "sqlserver/sql-2012-enterprise-windows-2012-r2-dc.wf.json"
      gcs_url: ((.:gcs_url))
      build_date: ((.:build-date))
      sql_server_media: ((.:sql-server-media))
      source_image_project: "bct-prod-images"
      ssms_exe: ((.:windows_gcs_ssms_exe))
      timeout: "4h"

# Publish to testing
# Windows 2022
- name: publish-to-testing-2022
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - get: windows-2022-gcs
    passed: [build-windows-2022]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2022-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2022
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2022-dc-uefi.publish.json"
      environment: "test"
# Windows 2022 Core
- name: publish-to-testing-2022-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - get: windows-2022-core-gcs
    passed: [build-windows-2022-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2022-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2022-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2022-dc-core-uefi.publish.json"
      environment: "test"
# Windows SAC 20h2 Core
- name: publish-to-testing-20h2
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-20h2-core-gcs
    passed: [build-windows-20h2-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-20h2-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-20h2-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-20h2-dc-core-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-20h2"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-20h2"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows SAC 2004 Core
- name: publish-to-testing-2004
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2004-core-gcs
    passed: [build-windows-2004-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2004-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2004-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2004-dc-core-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2004"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2004"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2019
- name: publish-to-testing-2019
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2019-gcs
    passed: [build-windows-2019]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2019-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2019
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2019-dc-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2019"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2019"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2019 Core
- name: publish-to-testing-2019-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2019-core-gcs
    passed: [build-windows-2019-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2019-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2019-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2019-dc-core-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2019-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2019-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2016
- name: publish-to-testing-2016
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2016-gcs
    passed: [build-windows-2016]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2016-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2016
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2016-dc-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2016"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2016"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2016 Core
- name: publish-to-testing-2016-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2016-core-gcs
    passed: [build-windows-2016-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2016-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2016-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2016-dc-core-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2016-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2016-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2012R2
- name: publish-to-testing-2012r2
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2012r2-gcs
    passed: [build-windows-2012r2]
    trigger: true
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2012r2-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2012r2
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2012r2-dc-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2012r2"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2012r2"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2012R2 Core
- name: publish-to-testing-2012r2-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2012r2-core-gcs
    passed: [build-windows-2012r2-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2012r2-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2012r2-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2012r2-dc-core-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2012r2-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-testing-2012r2-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# sql-2012-enterprise-windows-2012-r2-dc
- name: publish-to-testing-sql-2012-enterprise-windows-2012-r2-dc
  plan:
  - get: guest-test-infra
    passed: [build-sql-2012-enterprise-windows-2012-r2-dc]
    trigger: true
  - get: compute-image-tools
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - get: sql-2012-enterprise-windows-2012-r2-dc-gcs
  - load_var: source-version
    file: sql-2012-enterprise-windows-2012-r2-dc-gcs/version
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-sql-2012-enterprise-windows-2012-r2-dc
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/sqlserver-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "sqlserver/sql-2012-enterprise-windows-2012-r2-dc-uefi.publish"
      environment: "test"

# Publish to staging
# Windows 2022
- name: publish-to-staging-2022
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - get: windows-2022-gcs
    passed: [publish-to-testing-2022]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2022-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2022
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2022-dc-uefi.publish.json"
      environment: "staging"
# Windows 2022 Core
- name: publish-to-staging-2022-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - get: windows-2022-core-gcs
    passed: [publish-to-testing-2022-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2022-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2022-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2022-dc-core-uefi.publish.json"
      environment: "staging"
# Windows SAC 20h2 Core
- name: publish-to-staging-20h2
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-20h2-core-gcs
    passed: [publish-to-testing-20h2]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-20h2-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-20h2-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-20h2-dc-core-uefi.publish.json"
      environment: "staging"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-20h2"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-20h2"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows SAC 2004 Core
- name: publish-to-staging-2004
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2004-core-gcs
    passed: [publish-to-testing-2004]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2004-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2004-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2004-dc-core-uefi.publish.json"
      environment: "staging"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2004"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2004"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2019
- name: publish-to-staging-2019
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2019-gcs
    passed: [publish-to-testing-2019]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2019-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2019
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2019-dc-uefi.publish.json"
      environment: "test"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2019"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2019"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2019 Core
- name: publish-to-staging-2019-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2019-core-gcs
    passed: [publish-to-testing-2019-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2019-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2019-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2019-dc-core-uefi.publish.json"
      environment: "staging"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2019-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2019-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2016
- name: publish-to-staging-2016
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2016-gcs
    passed: [publish-to-testing-2016]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2016-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2016
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2016-dc-uefi.publish.json"
      environment: "staging"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2016"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2016"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2016 Core
- name: publish-to-staging-2016-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2016-core-gcs
    passed: [publish-to-testing-2016-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2016-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2016-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2016-dc-core-uefi.publish.json"
      environment: "staging"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2016-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2016-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2012R2
- name: publish-to-staging-2012r2
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2012r2-gcs
    passed: [publish-to-testing-2012r2]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2012r2-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2012r2
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2012r2-dc-uefi.publish.json"
      environment: "staging"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2012r2"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2012r2"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2012R2 Core
- name: publish-to-staging-2012r2-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2012r2-core-gcs
    passed: [publish-to-testing-2012r2-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2012r2-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2012r2-core
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2012r2-dc-core-uefi.publish.json"
      environment: "staging"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2012r2-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-staging-2012r2-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# sql-2012-enterprise-windows-2012-r2-dc
- name: publish-to-staging-sql-2012-enterprise-windows-2012-r2-dc
  plan:
  - get: guest-test-infra
    passed: [publish-to-testing-sql-2012-enterprise-windows-2012-r2-dc]
    trigger: false
  - get: compute-image-tools
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - get: sql-2012-enterprise-windows-2012-r2-dc-gcs
  - load_var: source-version
    file: sql-2012-enterprise-windows-2012-r2-dc-gcs/version
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-sql-2012-enterprise-windows-2012-r2-dc
    file: guest-test-infra/concourse/tasks/daisy-publish-images.yaml
    vars:
      source_gcs_path: "gs://artifact-releaser-prod-rtp/sqlserver-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "sqlserver/sql-2012-enterprise-windows-2012-r2-dc-uefi.publish"
      environment: "staging"

# Publish to prod
# Windows 2022
- name: publish-to-prod-2022
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - get: windows-2022-gcs
    passed: [publish-to-staging-2022]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2022-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2022
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2022-dc-uefi.publish.json"
      image_name: "windows-2022"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
# Windows 2022 Core
- name: publish-to-prod-2022-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - get: windows-2022-core-gcs
    passed: [publish-to-staging-2022-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2022-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2022-core
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2022-dc-core-uefi.publish.json"
      image_name: "windows-2022-core"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
# Windows SAC 20h2 Core
- name: publish-to-prod-20h2
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-20h2-core-gcs
    passed: [publish-to-staging-20h2]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-20h2-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-20h2-core
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-20h2-dc-core-uefi.publish.json"
      image_name: "windows-20h2-core"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-20h2"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-20h2"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows SAC 2004 Core
- name: publish-to-prod-2004
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2004-core-gcs
    passed: [publish-to-staging-2004]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2004-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2004-core
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2004-dc-core-uefi.publish.json"
      image_name: "windows-2004-core"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2004"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2004"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2019
- name: publish-to-prod-2019
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2019-gcs
    passed: [publish-to-staging-2019]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2019-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2019
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2019-dc-uefi.publish.json"
      image_name: "windows-2019"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2019"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2019"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2019 Core
- name: publish-to-prod-2019-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2019-core-gcs
    passed: [publish-to-staging-2019-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2019-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2019-core
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2019-dc-core-uefi.publish.json"
      image_name: "windows-2019-core"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2019-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2019-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2016
- name: publish-to-prod-2016
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2016-gcs
    passed: [publish-to-staging-2016]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2016-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2016
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2016-dc-uefi.publish.json"
      image_name: "windows-2016"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2016"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2016"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2016 Core
- name: publish-to-prod-2016-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2016-core-gcs
    passed: [publish-to-staging-2016-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2016-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2016-core
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2016-dc-core-uefi.publish.json"
      image_name: "windows-2016-core"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2016-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2016-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2012R2
- name: publish-to-prod-2012r2
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2012r2-gcs
    passed: [publish-to-staging-2012r2]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2012r2-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2012r2
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2012-dc-core-uefi.publish.json"
      image_name: "windows-2012r2"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2012r2"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2012r2"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# Windows 2012R2 Core
- name: publish-to-prod-2012r2-core
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - task: generate-timestamp
    file: guest-test-infra/concourse/tasks/generate-timestamp.yaml
  - load_var: start-timestamp-ms
    file: timestamp/timestamp-ms
  - get: windows-2012r2-core-gcs
    passed: [publish-to-staging-2012r2-core]
    trigger: false
    params:
      skip_download: "true"
  - load_var: source-version
    file: windows-2012r2-core-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-windows-2012r2-core
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/windows-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "windows/windows-server-2012r2-dc-core-uefi.publish.json"
      image_name: "windows-2012r2-core"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
  on_success:
    task: success
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2012r2-core"
      result_state: "success"
      start_timestamp: ((.:start-timestamp-ms))
  on_failure:
    task: failure
    file: guest-test-infra/concourse/tasks/publish-job-result.yaml
    vars:
      pipeline: "windows-image-build"
      job: "publish-to-prod-2012r2-core"
      result_state: "failure"
      start_timestamp: ((.:start-timestamp-ms))
# sql-2012-enterprise-windows-2012-r2-dc
- name: publish-to-prod-sql-2012-enterprise-windows-2012-r2-dc
  plan:
  - get: guest-test-infra
  - get: compute-image-tools
  - get: sql-2012-enterprise-windows-2012-r2-dc-gcs
    passed: [publish-to-staging-sql-2012-enterprise-windows-2012-r2-dc]
    trigger: false
  - load_var: source-version
    file: sql-2012-enterprise-windows-2012-r2-dc-gcs/version
  - task: get-credential
    file: guest-test-infra/concourse/tasks/get-credential.yaml
  - task: generate-version
    file: guest-test-infra/concourse/tasks/generate-version.yaml
  - load_var: publish-version
    file: publish-version/version # produced from generate-version task
  - task: publish-sql-2012-enterprise-windows-2012-r2-dc
    file: guest-test-infra/concourse/tasks/gcloud-publish-image.yaml
    vars:
      gcs_image_path: "gs://artifact-releaser-prod-rtp/sqlserver-uefi"
      source_version: v((.:source-version))
      publish_version: ((.:publish-version))
      wf: "sqlserver/sql-2012-enterprise-windows-2012-r2-dc-uefi.publish"
      image_name: "sql-2012-enterprise-windows-2012-r2-dc"
      release_notes: ""
      topic: "projects/artifact-releaser-prod/topics/gcp-guest-image-release-prod"
