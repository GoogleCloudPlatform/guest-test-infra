---
resource_types:
- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource

resources:
# Git repos
- name: compute-daisy
  type: git
  source:
    uri: https://github.com/hopkiw/compute-daisy.git
    branch: dockerfile
- name: compute-image-tools
  type: git
  source:
    uri: https://github.com/GoogleCloudPlatform/compute-image-tools.git
    branch: master
    paths:
    - daisy_workflows/**

# Output artifacts
- name: linux-executable
  type: gcs
  source:
    bucket: compute-image-tools-test
    json_key: |
      ((concourse-sa.credential))
    versioned_file: release/linux/daisy
- name: windows-executable
  type: gcs
  source:
    bucket: compute-image-tools-test
    json_key: |
      ((concourse-sa.credential))
    versioned_file: release/windows/daisy
- name: darwin-executable
  type: gcs
  source:
    bucket: compute-image-tools-test
    json_key: |
      ((concourse-sa.credential))
    versioned_file: release/darwin/daisy

jobs:
- name: daisy
  plan:
  - get: compute-daisy
    trigger: true
  - get: compute-image-tools
    trigger: true

  # Add daisy workflows dir
  - task: get-daisy-workflows
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: busybox
      inputs:
      - name: compute-daisy
      - name: compute-image-tools
      outputs:
      - name: compute-daisy
      run:
        path: sh
        args:
        - -ec
        - |
          cp -a compute-image-tools/daisy_workflows compute-daisy/daisy_workflows
  - task: build-image
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: gcr.io/kaniko-project/executor
          tag: latest
      inputs:
      - name: compute-daisy
      run:
        path: executor
        args:
        - --dockerfile=Dockerfile
        - --context=compute-daisy
        - --destination=gcr.io/liamh-testing/daisy:latest
  - task: build-linux-executable
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: golang
      inputs:
      - name: compute-daisy
        path: .
      outputs:
      - name: linux
      params:
        GOOS: linux
      run:
        path: go
        dir: cli
        args: [ build, -o=../linux/daisy ]
  - task: build-windows-executable
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: golang
      inputs:
      - name: compute-daisy
        path: .
      outputs:
      - name: windows
      params:
        GOOS: windows
      run:
        path: go
        dir: cli
        args: [ build, -o=../windows/daisy ]
  - task: build-darwin-executable
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: golang
      inputs:
      - name: compute-daisy
        path: .
      outputs:
      - name: darwin
      params:
        GOOS: darwin
      run:
        path: go
        dir: cli
        args: [ build, -o=../darwin/daisy ]
#  # Validate artifacts before uploading.
#  - task: validate-contents-of-linux-image
#    image: container-structure-test
#    privileged: true # Required for container structure test to execute Docker
#    config:
#      platform: linux
#      inputs:
#      - name: compute-daisy
#      - name: image
#      run:
#        path: /container-structure-test
#        args:
#        - test
#        - --driver=tar
#        - --image=image/image.tar
#        - --config=compute-daisy/daisy_integration_tests/container_structure/base.yaml
#        - --config=compute-daisy/daisy_integration_tests/container_structure/workflows.yaml

  # Upload artifacts and validate they are public.
  - put: linux-executable
    params:
      predefined_acl: publicRead
      file: linux/daisy
  - put: darwin-executable
    params:
      predefined_acl: publicRead
      file: darwin/daisy
  - put: windows-executable
    params:
      predefined_acl: publicRead
      file: windows/daisy
  - task: validate-artifacts-are-public
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine/curl
      run:
        path: sh
        args:
        - -ec
        - |
          for f in linux darwin windows; do 
            url="https://storage.googleapis.com/compute-image-tools-test/release/$f/daisy"
            [[ `curl -o /dev/null -Isw '%{http_code}' $url` -eq 200 ]] || 
              (echo "$f binary is not public"; exit 1)
          done
